{"ast":null,"code":"var _jsxFileName = \"C:\\\\My project\\\\react-weather-forecast\\\\app-weather-forecast\\\\src\\\\components\\\\ForecastWeather.jsx\";\nimport React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport cloudyNightSvg from \"../assets/cloudy-night.svg\";\nimport cloudyDaySvg from \"../assets/cloudy-day-3.svg\";\nimport clearDaySvg from \"../assets/day.svg\";\nimport drizzleSvg from \"../assets/drizzle.svg\";\nimport rainySvg from \"../assets/rainy.svg\";\nimport snowySvg from \"../assets/snowy.svg\";\nimport thunderSvg from \"../assets/thunder.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastWeather = ({\n  day,\n  today,\n  date,\n  nextday,\n  data\n}) => {\n  const icon = (icon, time) => {\n    switch (icon) {\n      case 'Clouds' && time >= '06:00' && time < '20:00':\n        return cloudyDaySvg;\n        break;\n\n      case 'Clouds' && time < '06:00' && time > '20:00':\n        return cloudyNightSvg;\n        break;\n\n      default:\n        return;\n    } // if(icon === \"Clouds\" && time >= '06:00' && time < '20:00'){\n    //     return cloudyDaySvg\n    // }else if(icon === \"Clear\"){\n    //     return clearDaySvg\n    // }else if(icon === \"Drizzle\"){\n    //     return drizzleSvg\n    // }else if(icon === \"Rain\"){\n    //     return rainySvg\n    // }else if(icon === \"Thunderstorm\"){\n    //     return thunderSvg\n    // }else if(icon === \"Snow\"){\n    //     return snowySvg\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__title\",\n      children: day === today ? 'Сегодня' : day === nextday ? 'Завтра' : `${date}, ${day}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__items\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        spaceBetween: 50,\n        slidesPerView: 1,\n        initialSlide: 4,\n        breakpoints: {\n          600: {\n            slidesPerView: 4\n          }\n        },\n        children: data.map(elem => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: `${date},${elem.time}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: icon(elem.weather.main, elem.time),\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"temp\",\n                children: [elem.temp, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"description\",\n                children: elem.weather.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"description\",\n                children: [\"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A: \", elem.feels_like, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, elem.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ForecastWeather;\nexport default ForecastWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastWeather\");","map":{"version":3,"sources":["C:/My project/react-weather-forecast/app-weather-forecast/src/components/ForecastWeather.jsx"],"names":["React","Swiper","SwiperSlide","ForecastWeather","day","today","date","nextday","data","icon","time","cloudyDaySvg","cloudyNightSvg","slidesPerView","map","elem","weather","main","temp","description","feels_like"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;;;;;;;;;;AAWA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAAuC;AAG3D,QAAMC,IAAI,GAAG,CAACA,IAAD,EAAOC,IAAP,KAAgB;AACzB,YAAOD,IAAP;AACI,WAAK,YAAYC,IAAI,IAAI,OAApB,IAA+BA,IAAI,GAAG,OAA3C;AACI,eAAOC,YAAP;AACA;;AACJ,WAAK,YAAYD,IAAI,GAAG,OAAnB,IAA8BA,IAAI,GAAG,OAA1C;AACI,eAAOE,cAAP;AACA;;AACJ;AACI;AARR,KADyB,CAYzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,GAzBD;;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BR,GAAG,KAAKC,KAAR,GAAgB,SAAhB,GAA4BD,GAAG,KAAKG,OAAR,GAAkB,QAAlB,GAA8B,GAAED,IAAK,KAAIF,GAAI;AAAvG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,YAAY,EAAI,EADpB;AAEI,QAAA,aAAa,EAAI,CAFrB;AAGI,QAAA,YAAY,EAAI,CAHpB;AAII,QAAA,WAAW,EAAI;AACX,eAAM;AAACS,YAAAA,aAAa,EAAC;AAAf;AADK,SAJnB;AAAA,kBASQL,IAAI,CAACM,GAAL,CAASC,IAAI,iBAAK,QAAC,WAAD;AAAA,iCACd;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAwB,GAAET,IAAK,IAAGS,IAAI,CAACL,IAAK;AAA5C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACI;AAAA,uCACI;AAAK,kBAAA,GAAG,EAAED,IAAI,CAACM,IAAI,CAACC,OAAL,CAAaC,IAAd,EAAoBF,IAAI,CAACL,IAAzB,CAAd;AAA8C,kBAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,2BAAuBK,IAAI,CAACG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAQI;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,aAAb;AAAA,0BAA4BH,IAAI,CAACC,OAAL,CAAaG;AAAzC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,0GAA8CJ,IAAI,CAACK,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADc,WAAkBL,IAAI,CAACL,IAAvB;AAAA;AAAA;AAAA;AAAA,gBAAlB;AATR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA/DD;;KAAMP,e;AAiEN,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport cloudyNightSvg from '../assets/cloudy-night.svg'\r\nimport cloudyDaySvg from '../assets/cloudy-day-3.svg'\r\nimport clearDaySvg from '../assets/day.svg'\r\nimport drizzleSvg from '../assets/drizzle.svg'\r\nimport rainySvg from '../assets/rainy.svg'\r\nimport snowySvg from '../assets/snowy.svg'\r\nimport thunderSvg from '../assets/thunder.svg'\r\n\r\n\r\nconst ForecastWeather = ({day, today, date, nextday, data}) => {\r\n\r\n\r\n    const icon = (icon, time) => {\r\n        switch(icon){\r\n            case 'Clouds' && time >= '06:00' && time < '20:00':\r\n                return cloudyDaySvg\r\n                break;\r\n            case 'Clouds' && time < '06:00' && time > '20:00':\r\n                return cloudyNightSvg\r\n                break;\r\n            default:\r\n                return\r\n        }\r\n\r\n        // if(icon === \"Clouds\" && time >= '06:00' && time < '20:00'){\r\n        //     return cloudyDaySvg\r\n        // }else if(icon === \"Clear\"){\r\n        //     return clearDaySvg\r\n        // }else if(icon === \"Drizzle\"){\r\n        //     return drizzleSvg\r\n        // }else if(icon === \"Rain\"){\r\n        //     return rainySvg\r\n        // }else if(icon === \"Thunderstorm\"){\r\n        //     return thunderSvg\r\n        // }else if(icon === \"Snow\"){\r\n        //     return snowySvg\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className='card__title'>{day === today ? 'Сегодня' : day === nextday ? 'Завтра' : `${date}, ${day}`}</div>\r\n            <div className='card__items'>\r\n                <Swiper \r\n                    spaceBetween = {50} \r\n                    slidesPerView = {1}\r\n                    initialSlide = {4}\r\n                    breakpoints = {{\r\n                        600 : {slidesPerView:4}\r\n                    }}\r\n                >\r\n                    {\r\n                        data.map(elem =>  <SwiperSlide key={elem.time}>\r\n                            <div className='weather'>\r\n                                <div className='time'>{`${date},${elem.time}`}</div>\r\n                                <div className='info'>\r\n                                    <div>\r\n                                        <img src={icon(elem.weather.main, elem.time)} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='temp'>{elem.temp}°C</div>\r\n                                </div>\r\n                                <div>\r\n                                    <p className='description'>{elem.weather.description}</p>\r\n                                    <span className='description'>Ощущается как: {elem.feels_like}°C</span>\r\n                                </div>\r\n                            </div>\r\n                        </SwiperSlide>)\r\n                    }\r\n                </Swiper>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastWeather"]},"metadata":{},"sourceType":"module"}