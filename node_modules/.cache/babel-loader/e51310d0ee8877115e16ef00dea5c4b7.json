{"ast":null,"code":"var _jsxFileName = \"C:\\\\My project\\\\react-weather-forecast\\\\app-weather-forecast\\\\src\\\\components\\\\WeeksForecastContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport WeekForecast from './WeekForecast';\nimport { weatherApi } from '../api/api'; // HELPEES\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst findDay = (day, dayName) => {\n  let date = new Date(day.dt_txt).toLocaleString(\"ru\", {\n    weekday: \"long\"\n  });\n  return date == dayName;\n};\n\nconst createArr = arr => {\n  return arr.map(elem => {\n    let time = new Date(elem.dt_txt).toLocaleString(\"ru\", {\n      month: \"long\",\n      day: \"numeric\",\n      // weekday: \"long\", \n      hour: \"numeric\",\n      minute: \"numeric\"\n    });\n    console.log(time);\n    return {\n      time,\n      temp: elem.main.temp,\n      feels_like: elem.main.feels_like,\n      weather: elem.weather[0]\n    };\n  });\n}; // END HELPERS\n\n\nconst WeeksForecastContainer = props => {\n  _s();\n\n  const [week, setWeek] = useState([]);\n  useEffect(() => {\n    weatherApi.forWeek(props.city).then(res => {\n      let week = [{\n        day: 'понедельник',\n        data: createArr(res.filter(day => findDay(day, 'понедельник')))\n      }, {\n        day: 'вторник',\n        data: createArr(res.filter(day => findDay(day, 'вторник')))\n      }, {\n        day: 'среда',\n        data: createArr(res.filter(day => findDay(day, 'среда')))\n      }, {\n        day: 'четверг',\n        data: createArr(res.filter(day => findDay(day, 'четверг')))\n      }, {\n        day: 'пятница',\n        data: createArr(res.filter(day => findDay(day, 'пятница')))\n      }, {\n        day: 'суббота',\n        data: createArr(res.filter(day => findDay(day, 'суббота')))\n      }, {\n        day: 'воскресенье',\n        data: createArr(res.filter(day => findDay(day, 'воскресенье')))\n      }];\n      setWeek(week);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WeekForecast, {\n    city: props.city,\n    week: week\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 8\n  }, this);\n};\n\n_s(WeeksForecastContainer, \"hEIolS4zf2jAIhtS9M6dQ4SjgyQ=\");\n\n_c = WeeksForecastContainer;\nexport default WeeksForecastContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeksForecastContainer\");","map":{"version":3,"sources":["C:/My project/react-weather-forecast/app-weather-forecast/src/components/WeeksForecastContainer.jsx"],"names":["react","useState","useEffect","WeekForecast","weatherApi","findDay","day","dayName","date","Date","dt_txt","toLocaleString","weekday","createArr","arr","map","elem","time","month","hour","minute","console","log","temp","main","feels_like","weather","WeeksForecastContainer","props","week","setWeek","forWeek","city","then","res","data","filter"],"mappings":"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","sourcesContent":["import react, {useState, useEffect} from 'react';\r\nimport WeekForecast from './WeekForecast';\r\nimport {weatherApi} from '../api/api';\r\n\r\n// HELPEES\r\nconst findDay = (day, dayName) => {\r\n    let date = new Date(day.dt_txt).toLocaleString(\"ru\", {weekday: \"long\"} );\r\n    return ( date == dayName);\r\n}\r\n\r\nconst createArr = (arr) => {\r\n    return(\r\n        arr.map( ( elem => {\r\n            let time = new Date( elem.dt_txt ).toLocaleString(\"ru\", {\r\n            month: \"long\", \r\n            day: \"numeric\", \r\n            // weekday: \"long\", \r\n            hour: \"numeric\",\r\n            minute: \"numeric\" } );\r\n\r\n            console.log(time)\r\n            return {\r\n                time,\r\n                temp: elem.main.temp, \r\n                feels_like: elem.main.feels_like,\r\n                weather: elem.weather[0]\r\n                }\r\n            } )\r\n     )\r\n    )\r\n}\r\n// END HELPERS\r\nconst WeeksForecastContainer = (props) => {\r\n    \r\n    const [week, setWeek] = useState([]);\r\n\r\n    useEffect( () => {\r\n        weatherApi.forWeek(props.city).then( res => {\r\n            let week = [\r\n                { day: 'понедельник', data: createArr( res.filter( (day) => findDay( day, 'понедельник') ) ) },\r\n                { day: 'вторник', data: createArr( res.filter( (day) => findDay( day, 'вторник') ) ) },\r\n                { day: 'среда', data: createArr( res.filter( (day) => findDay( day, 'среда') ) ) },\r\n                { day: 'четверг', data: createArr( res.filter( (day) => findDay( day, 'четверг') ) ) },\r\n                { day: 'пятница', data: createArr( res.filter( (day) => findDay( day, 'пятница') ) ) },\r\n                { day: 'суббота', data: createArr( res.filter( (day) => findDay( day, 'суббота') ) ) },\r\n                { day: 'воскресенье', data: createArr( res.filter( (day) => findDay( day, 'воскресенье') ) ) },\r\n            ]\r\n            setWeek(week);\r\n        }) \r\n\r\n    }, [] )\r\n\r\n    return(\r\n       <WeekForecast city = {props.city} week = {week} />\r\n    )\r\n}\r\n\r\nexport default WeeksForecastContainer;\r\n"]},"metadata":{},"sourceType":"module"}