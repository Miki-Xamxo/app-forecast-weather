{"ast":null,"code":"var _jsxFileName = \"C:\\\\My project\\\\react-weather-forecast\\\\app-weather-forecast\\\\src\\\\components\\\\Weather.jsx\";\nimport s from './Weather.module.css'; //ICONS\n// import cloudyDay from '../assets/cloudy-day.svg';\n\nimport cloudyNight from \"../assets/cloudy-night.svg\";\nimport thunder from \"../assets/thunder.svg\";\nimport drizzle from \"../assets/drizzle.svg\";\nimport rainy from \"../assets/rainy.svg\";\nimport snow from \"../assets/snowy.svg\";\nimport clearDay from \"../assets/day.svg\"; // import Loader from '../loader/Loader';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  let img;\n\n  switch (props.icon) {\n    case \"Clouds\":\n      img = cloudyNight;\n      break;\n\n    case \"Thunderstorm\":\n      img = thunder;\n      break;\n\n    case \"Drizzle\":\n      img = drizzle;\n      break;\n\n    case \"Rain\":\n      img = rainy;\n      break;\n\n    case \"Snow\":\n      img = snow;\n      break;\n\n    case \"Clear\":\n      img = clearDay;\n      break;\n\n    default:\n      img = clearDay;\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.weatherBlock,\n    onClick: () => props.setWeekForecast({\n      isOpen: true,\n      city: props.name\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.weather,\n      children: [props.deleteCity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.delete,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          onClick: () => props.deleteCity(props.name),\n          children: \" X \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.location,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.mainInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.temp,\n          children: Math.round(props.temp) + '°C'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.weatherType,\n        children: props.weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.feelsLike,\n        children: [\"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A: \", Math.round(props.feels_like), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/My project/react-weather-forecast/app-weather-forecast/src/components/Weather.jsx"],"names":["s","Weather","props","img","icon","cloudyNight","thunder","drizzle","rainy","snow","clearDay","weatherBlock","setWeekForecast","isOpen","city","name","weather","deleteCity","delete","button","location","mainInfo","temp","Math","round","weatherType","feelsLike","feels_like"],"mappings":";AAAA,OAAOA,CAAP,MAAc,sBAAd,C,CAEA;AACA;;;;;;;0CAOA;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,GAAJ;;AACA,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,QAAL;AACID,MAAAA,GAAG,GAAGE,WAAN;AACA;;AAEJ,SAAK,cAAL;AACIF,MAAAA,GAAG,GAAGG,OAAN;AACA;;AAEJ,SAAK,SAAL;AACIH,MAAAA,GAAG,GAAGI,OAAN;AACA;;AAEJ,SAAK,MAAL;AACIJ,MAAAA,GAAG,GAAGK,KAAN;AACA;;AAEJ,SAAK,MAAL;AACIL,MAAAA,GAAG,GAAGM,IAAN;AACA;;AAEJ,SAAK,OAAL;AACIN,MAAAA,GAAG,GAAGO,QAAN;AACA;;AAEJ;AACIP,MAAAA,GAAG,GAAGO,QAAN;AACA;AA3BR;;AA6BA,sBACI;AAAK,IAAA,SAAS,EAAIV,CAAC,CAACW,YAApB;AAAkC,IAAA,OAAO,EAAK,MAAMT,KAAK,CAACU,eAAN,CAAuB;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,IAAI,EAAEZ,KAAK,CAACa;AAA5B,KAAvB,CAApD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAIf,CAAC,CAACgB,OAApB;AAAA,iBACKd,KAAK,CAACe,UAAN,iBACD;AAAK,QAAA,SAAS,EAAIjB,CAAC,CAACkB,MAApB;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAIlB,CAAC,CAACmB,MAAvB;AAA+B,UAAA,OAAO,EAAK,MAAMjB,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACa,IAAvB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAIf,CAAC,CAACoB,QAApB;AAAA,kBACKlB,KAAK,CAACa;AADX;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAK,QAAA,SAAS,EAAIf,CAAC,CAACqB,QAApB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAIrB,CAAC,CAACG,GAApB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAIA,GAAZ;AAAiB,YAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAIH,CAAC,CAACsB,IAApB;AAAA,oBACKC,IAAI,CAACC,KAAL,CAAWtB,KAAK,CAACoB,IAAjB,IAAyB;AAD9B;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAK,QAAA,SAAS,EAAItB,CAAC,CAACyB,WAApB;AAAA,kBAAkCvB,KAAK,CAACc;AAAxC;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAK,QAAA,SAAS,EAAIhB,CAAC,CAAC0B,SAApB;AAAA,kGAA+CH,IAAI,CAACC,KAAL,CAAWtB,KAAK,CAACyB,UAAjB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAvDD;;KAAM1B,O;AAyDN,eAAeA,OAAf","sourcesContent":["import s from './Weather.module.css';\r\n\r\n//ICONS\r\n// import cloudyDay from '../assets/cloudy-day.svg';\r\nimport cloudyNight from '../assets/cloudy-night.svg';\r\nimport thunder from '../assets/thunder.svg';\r\nimport drizzle from '../assets/drizzle.svg';\r\nimport rainy from '../assets/rainy.svg';\r\nimport snow from '../assets/snowy.svg';\r\nimport clearDay from '../assets/day.svg';\r\n// import Loader from '../loader/Loader';\r\n\r\nconst Weather = (props) => {\r\n    let img;\r\n    switch (props.icon){\r\n        case \"Clouds\": \r\n            img = cloudyNight\r\n            break;\r\n\r\n        case \"Thunderstorm\": \r\n            img = thunder;\r\n            break;\r\n\r\n        case \"Drizzle\": \r\n            img = drizzle;\r\n            break;\r\n\r\n        case \"Rain\": \r\n            img = rainy;\r\n            break;\r\n\r\n        case \"Snow\": \r\n            img = snow;\r\n            break;\r\n\r\n        case \"Clear\":\r\n            img = clearDay;\r\n            break;\r\n\r\n        default: \r\n            img = clearDay;\r\n            break;\r\n    }\r\n    return(\r\n        <div className = {s.weatherBlock} onClick = { () => props.setWeekForecast( { isOpen: true, city: props.name } ) }>\r\n            <div className = {s.weather}>\r\n                {props.deleteCity && \r\n                <div className = {s.delete}>\r\n                  <button className = {s.button} onClick = { () => props.deleteCity(props.name) } > X </button>\r\n                </div>\r\n                }\r\n                <div className = {s.location}>\r\n                    {props.name}\r\n                </div>\r\n                <div className = {s.mainInfo}>\r\n                    <div className = {s.img}>\r\n                        <img src = {img} alt=\"\"/>\r\n                    </div>\r\n                    <div className = {s.temp}>\r\n                        {Math.round(props.temp) + '°C'}\r\n                    </div>\r\n                </div>\r\n                <div className = {s.weatherType}>{props.weather}</div>\r\n                <div className = {s.feelsLike}>Ощущается как: {Math.round(props.feels_like)}°C</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}